@page "/fetchdata"
@attribute [Authorize]
@using Raketti.Shared
@inject Raketti.Client.Services.IUserService UserService
@inject IToastService ToastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

<style>
	#user-table tr:hover {
		background: hsl(0, 0%, 87%);
		cursor: pointer;
	}
</style>

@if (users == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>ID</th>
				<th>First name</th>
				<th>Last name</th>
			</tr>
		</thead>
		<tbody id="user-table">
			@foreach (var user in users)
			{
				<tr @onclick="() => GetUser(user.UserId)">
					<td>@user.UserId</td>
					<td>@user.FirstName</td>
					<td>@user.LastName</td>
				</tr>
			}
		</tbody>
	</table>
}

@code {
	List<User> users;

	protected override async Task OnInitializedAsync()
	{
		try
		{
			var res = await UserService.GetUsers();

			if (!res.Success)
			{
				ToastService.ShowError(res.Info, "Error");
			}
			else
			{
				users = res.Data;
			}
		}
		catch (Exception e)
		{
			ToastService.ShowError(e.Message, "Error");
		}
	}

	private async void GetUser(int userId)
	{
		try
		{
			var res = await UserService.GetUser(userId);

			if (!res.Success)
			{
				ToastService.ShowError(res.Info, "Error");
			}
			else
			{
				ToastService.ShowSuccess(res.Data[0].ToString());
			}
		}
		catch (Exception e)
		{
			ToastService.ShowError(e.Message, "Error");
		}
	}
}
